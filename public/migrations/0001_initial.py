# Generated by Django 2.2.2 on 2019-09-22 16:34

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('ispublic', models.BooleanField(default=False)),
                ('isforensic', models.BooleanField(default=False)),
                ('ispolice', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Criminal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('case_category', models.CharField(max_length=40)),
                ('id_mark', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='UnidentifiedBodies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_mark', models.CharField(max_length=50)),
                ('location', models.CharField(max_length=40)),
                ('reason', models.CharField(max_length=70)),
            ],
        ),
        migrations.CreateModel(
            name='Police',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('area', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Public',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('email', models.CharField(max_length=100)),
                ('flat_no', models.CharField(max_length=10)),
                ('st_name', models.CharField(max_length=50)),
                ('area', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('pincode', models.IntegerField(default=0)),
                ('phno', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Compliant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complainee_name', models.CharField(max_length=30)),
                ('complainee_addr', models.CharField(max_length=250)),
                ('fir_no', models.IntegerField(default=0)),
                ('status', models.CharField(default='No status', max_length=100)),
                ('body', models.CharField(max_length=300)),
                ('category', multiselectfield.db.fields.MultiSelectField(choices=[('criminal', 'Criminal'), ('civil', 'Civil')], max_length=14)),
                ('reg_datetime', models.DateField(auto_now_add=True)),
                ('documents', models.FileField(upload_to='documents/')),
                ('pol_officer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='public.Police')),
                ('pub_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='public.Public')),
            ],
        ),
    ]
